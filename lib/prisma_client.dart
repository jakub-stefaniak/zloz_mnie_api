library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:orm/orm.dart' as _i1;
import 'package:json_annotation/json_annotation.dart' as _i2;
import 'package:orm/dmmf.dart' as _i3;
import 'dart:convert' as _i4;
import 'package:orm/configure.dart' as _i5;
export 'package:orm/orm.dart' show Datasource, PrismaNull, PrismaUnion;
import 'package:json_annotation/json_annotation.dart'
    show $enumDecode, $enumDecodeNullable;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names, unused_import
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum SortOrder { asc, desc }

enum UserScalarFieldEnum {
  id,
  email,
  passwordHash,
  firstName,
  lastName,
  createdAt,
  updatedAt
}

enum UserSessionScalarFieldEnum {
  id,
  userId,
  accessToken,
  refreshToken,
  expiresAt,
  createdAt,
  updatedAt
}

class UserWhereInput implements _i1.JsonSerializable {
  const UserWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final _i1.PrismaNullable<UserWhereInput> AND;

  final _i1.PrismaNullable<List<UserWhereInput>> OR;

  final _i1.PrismaNullable<UserWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> email;

  final _i1.PrismaNullable<StringFilter> passwordHash;

  final _i1.PrismaNullable<StringFilter> firstName;

  final _i1.PrismaNullable<StringFilter> lastName;

  final _i1.PrismaNullable<DateTimeFilter> createdAt;

  final _i1.PrismaNullable<DateTimeFilter> updatedAt;

  final _i1.PrismaNullable<UserSessionListRelationFilter> sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserOrderByWithRelationInput implements _i1.JsonSerializable {
  const UserOrderByWithRelationInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> passwordHash;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  final _i1.PrismaNullable<UserSessionOrderByRelationAggregateInput> sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserWhereUniqueInput implements _i1.JsonSerializable {
  const UserWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class UserOrderByWithAggregationInput implements _i1.JsonSerializable {
  const UserOrderByWithAggregationInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> passwordHash;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  final _i1.PrismaNullable<UserCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<UserAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<UserMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<UserMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<UserSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class UserScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const UserScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<UserScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<UserScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<UserScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> email;

  final _i1.PrismaNullable<StringWithAggregatesFilter> passwordHash;

  final _i1.PrismaNullable<StringWithAggregatesFilter> firstName;

  final _i1.PrismaNullable<StringWithAggregatesFilter> lastName;

  final _i1.PrismaNullable<DateTimeWithAggregatesFilter> createdAt;

  final _i1.PrismaNullable<DateTimeWithAggregatesFilter> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionWhereInput implements _i1.JsonSerializable {
  const UserSessionWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
    this.user,
  });

  final _i1.PrismaNullable<UserSessionWhereInput> AND;

  final _i1.PrismaNullable<List<UserSessionWhereInput>> OR;

  final _i1.PrismaNullable<UserSessionWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<IntFilter> userId;

  final _i1.PrismaNullable<StringFilter> accessToken;

  final _i1.PrismaNullable<StringFilter> refreshToken;

  final _i1.PrismaNullable<DateTimeFilter> expiresAt;

  final _i1.PrismaNullable<DateTimeFilter> createdAt;

  final _i1.PrismaNullable<DateTimeFilter> updatedAt;

  final _i1.PrismaNullable<UserRelationFilter> user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'user': user,
    };
  }
}

class UserSessionOrderByWithRelationInput implements _i1.JsonSerializable {
  const UserSessionOrderByWithRelationInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
    this.user,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<SortOrder> accessToken;

  final _i1.PrismaNullable<SortOrder> refreshToken;

  final _i1.PrismaNullable<SortOrder> expiresAt;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  final _i1.PrismaNullable<UserOrderByWithRelationInput> user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'user': user,
    };
  }
}

class UserSessionWhereUniqueInput implements _i1.JsonSerializable {
  const UserSessionWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class UserSessionOrderByWithAggregationInput implements _i1.JsonSerializable {
  const UserSessionOrderByWithAggregationInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<SortOrder> accessToken;

  final _i1.PrismaNullable<SortOrder> refreshToken;

  final _i1.PrismaNullable<SortOrder> expiresAt;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  final _i1.PrismaNullable<UserSessionCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<UserSessionAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<UserSessionMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<UserSessionMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<UserSessionSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class UserSessionScalarWhereWithAggregatesInput
    implements _i1.JsonSerializable {
  const UserSessionScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<UserSessionScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<UserSessionScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<UserSessionScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<IntWithAggregatesFilter> userId;

  final _i1.PrismaNullable<StringWithAggregatesFilter> accessToken;

  final _i1.PrismaNullable<StringWithAggregatesFilter> refreshToken;

  final _i1.PrismaNullable<DateTimeWithAggregatesFilter> expiresAt;

  final _i1.PrismaNullable<DateTimeWithAggregatesFilter> createdAt;

  final _i1.PrismaNullable<DateTimeWithAggregatesFilter> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserCreateInput implements _i1.JsonSerializable {
  const UserCreateInput({
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  final _i1.PrismaNullable<UserSessionCreateNestedManyWithoutUserInput>
      sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserUncheckedCreateInput implements _i1.JsonSerializable {
  const UserUncheckedCreateInput({
    this.id,
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  final _i1.PrismaNullable<UserSessionUncheckedCreateNestedManyWithoutUserInput>
      sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserUpdateInput implements _i1.JsonSerializable {
  const UserUpdateInput({
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i1.PrismaNullable<UserSessionUpdateManyWithoutUserNestedInput>
      sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserUncheckedUpdateInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
    this.sessions,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i1.PrismaNullable<UserSessionUncheckedUpdateManyWithoutUserNestedInput>
      sessions;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'sessions': sessions,
    };
  }
}

class UserUpdateManyMutationInput implements _i1.JsonSerializable {
  const UserUpdateManyMutationInput({
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateManyInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionCreateInput implements _i1.JsonSerializable {
  const UserSessionCreateInput({
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    this.createdAt,
    this.updatedAt,
    required this.user,
  });

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  final UserCreateNestedOneWithoutSessionsInput user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'user': user,
    };
  }
}

class UserSessionUncheckedCreateInput implements _i1.JsonSerializable {
  const UserSessionUncheckedCreateInput({
    this.id,
    required this.userId,
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<int> id;

  final int userId;

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUpdateInput implements _i1.JsonSerializable {
  const UserSessionUpdateInput({
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
    this.user,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i1.PrismaNullable<UserUpdateOneRequiredWithoutSessionsNestedInput>
      user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'user': user,
    };
  }
}

class UserSessionUncheckedUpdateInput implements _i1.JsonSerializable {
  const UserSessionUncheckedUpdateInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> userId;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUpdateManyMutationInput implements _i1.JsonSerializable {
  const UserSessionUpdateManyMutationInput({
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const UserSessionUncheckedUpdateManyInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> userId;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class IntFilter implements _i1.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class StringFilter implements _i1.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class DateTimeFilter implements _i1.JsonSerializable {
  const DateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<DateTime> equals;

  final _i1.PrismaNullable<List<DateTime>> in$;

  final _i1.PrismaNullable<List<DateTime>> notIn;

  final _i1.PrismaNullable<DateTime> lt;

  final _i1.PrismaNullable<DateTime> lte;

  final _i1.PrismaNullable<DateTime> gt;

  final _i1.PrismaNullable<DateTime> gte;

  final _i1.PrismaNullable<NestedDateTimeFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class UserSessionListRelationFilter implements _i1.JsonSerializable {
  const UserSessionListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<UserSessionWhereInput> every;

  final _i1.PrismaNullable<UserSessionWhereInput> some;

  final _i1.PrismaNullable<UserSessionWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class UserSessionOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const UserSessionOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class UserCountOrderByAggregateInput implements _i1.JsonSerializable {
  const UserCountOrderByAggregateInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> passwordHash;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const UserAvgOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class UserMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const UserMaxOrderByAggregateInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> passwordHash;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserMinOrderByAggregateInput implements _i1.JsonSerializable {
  const UserMinOrderByAggregateInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> passwordHash;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSumOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSumOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class IntWithAggregatesFilter implements _i1.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringWithAggregatesFilter implements _i1.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class DateTimeWithAggregatesFilter implements _i1.JsonSerializable {
  const DateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<DateTime> equals;

  final _i1.PrismaNullable<List<DateTime>> in$;

  final _i1.PrismaNullable<List<DateTime>> notIn;

  final _i1.PrismaNullable<DateTime> lt;

  final _i1.PrismaNullable<DateTime> lte;

  final _i1.PrismaNullable<DateTime> gt;

  final _i1.PrismaNullable<DateTime> gte;

  final _i1.PrismaNullable<NestedDateTimeWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedDateTimeFilter> $min;

  final _i1.PrismaNullable<NestedDateTimeFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class UserRelationFilter implements _i1.JsonSerializable {
  const UserRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<UserWhereInput> is$;

  final _i1.PrismaNullable<UserWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class UserSessionCountOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSessionCountOrderByAggregateInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<SortOrder> accessToken;

  final _i1.PrismaNullable<SortOrder> refreshToken;

  final _i1.PrismaNullable<SortOrder> expiresAt;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSessionAvgOrderByAggregateInput({
    this.id,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
    };
  }
}

class UserSessionMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSessionMaxOrderByAggregateInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<SortOrder> accessToken;

  final _i1.PrismaNullable<SortOrder> refreshToken;

  final _i1.PrismaNullable<SortOrder> expiresAt;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionMinOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSessionMinOrderByAggregateInput({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<SortOrder> accessToken;

  final _i1.PrismaNullable<SortOrder> refreshToken;

  final _i1.PrismaNullable<SortOrder> expiresAt;

  final _i1.PrismaNullable<SortOrder> createdAt;

  final _i1.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionSumOrderByAggregateInput implements _i1.JsonSerializable {
  const UserSessionSumOrderByAggregateInput({
    this.id,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
    };
  }
}

class UserSessionCreateNestedManyWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<UserSessionCreateWithoutUserInput> create;

  final _i1.PrismaNullable<UserSessionCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class UserSessionUncheckedCreateNestedManyWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUncheckedCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<UserSessionCreateWithoutUserInput> create;

  final _i1.PrismaNullable<UserSessionCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class StringFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const StringFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<String> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class DateTimeFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const DateTimeFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<DateTime> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class UserSessionUpdateManyWithoutUserNestedInput
    implements _i1.JsonSerializable {
  const UserSessionUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<UserSessionCreateWithoutUserInput> create;

  final _i1.PrismaNullable<UserSessionCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserSessionUpsertWithWhereUniqueWithoutUserInput>
      upsert;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> set$;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> delete;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> connect;

  final _i1.PrismaNullable<UserSessionUpdateWithWhereUniqueWithoutUserInput>
      update;

  final _i1.PrismaNullable<UserSessionUpdateManyWithWhereWithoutUserInput>
      updateMany;

  final _i1.PrismaNullable<UserSessionScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class IntFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<int> set$;

  final _i1.PrismaNullable<int> increment;

  final _i1.PrismaNullable<int> decrement;

  final _i1.PrismaNullable<int> multiply;

  final _i1.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class UserSessionUncheckedUpdateManyWithoutUserNestedInput
    implements _i1.JsonSerializable {
  const UserSessionUncheckedUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<UserSessionCreateWithoutUserInput> create;

  final _i1.PrismaNullable<UserSessionCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserSessionUpsertWithWhereUniqueWithoutUserInput>
      upsert;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> set$;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> delete;

  final _i1.PrismaNullable<UserSessionWhereUniqueInput> connect;

  final _i1.PrismaNullable<UserSessionUpdateWithWhereUniqueWithoutUserInput>
      update;

  final _i1.PrismaNullable<UserSessionUpdateManyWithWhereWithoutUserInput>
      updateMany;

  final _i1.PrismaNullable<UserSessionScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class UserCreateNestedOneWithoutSessionsInput implements _i1.JsonSerializable {
  const UserCreateNestedOneWithoutSessionsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<UserCreateWithoutSessionsInput> create;

  final _i1.PrismaNullable<UserCreateOrConnectWithoutSessionsInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class UserUpdateOneRequiredWithoutSessionsNestedInput
    implements _i1.JsonSerializable {
  const UserUpdateOneRequiredWithoutSessionsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<UserCreateWithoutSessionsInput> create;

  final _i1.PrismaNullable<UserCreateOrConnectWithoutSessionsInput>
      connectOrCreate;

  final _i1.PrismaNullable<UserUpsertWithoutSessionsInput> upsert;

  final _i1.PrismaNullable<UserWhereUniqueInput> connect;

  final _i1.PrismaNullable<UserUpdateWithoutSessionsInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class NestedIntFilter implements _i1.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringFilter implements _i1.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedDateTimeFilter implements _i1.JsonSerializable {
  const NestedDateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<DateTime> equals;

  final _i1.PrismaNullable<List<DateTime>> in$;

  final _i1.PrismaNullable<List<DateTime>> notIn;

  final _i1.PrismaNullable<DateTime> lt;

  final _i1.PrismaNullable<DateTime> lte;

  final _i1.PrismaNullable<DateTime> gt;

  final _i1.PrismaNullable<DateTime> gte;

  final _i1.PrismaNullable<NestedDateTimeFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedIntWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatFilter implements _i1.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<NestedFloatFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedDateTimeWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedDateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<DateTime> equals;

  final _i1.PrismaNullable<List<DateTime>> in$;

  final _i1.PrismaNullable<List<DateTime>> notIn;

  final _i1.PrismaNullable<DateTime> lt;

  final _i1.PrismaNullable<DateTime> lte;

  final _i1.PrismaNullable<DateTime> gt;

  final _i1.PrismaNullable<DateTime> gte;

  final _i1.PrismaNullable<NestedDateTimeWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedDateTimeFilter> $min;

  final _i1.PrismaNullable<NestedDateTimeFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class UserSessionCreateWithoutUserInput implements _i1.JsonSerializable {
  const UserSessionCreateWithoutUserInput({
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUncheckedCreateWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUncheckedCreateWithoutUserInput({
    this.id,
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<int> id;

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionCreateOrConnectWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionCreateOrConnectWithoutUserInput({
    required this.where,
    required this.create,
  });

  final UserSessionWhereUniqueInput where;

  final UserSessionCreateWithoutUserInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class UserSessionUpsertWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUpsertWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final UserSessionWhereUniqueInput where;

  final UserSessionUpdateWithoutUserInput update;

  final UserSessionCreateWithoutUserInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class UserSessionUpdateWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUpdateWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.data,
  });

  final UserSessionWhereUniqueInput where;

  final UserSessionUpdateWithoutUserInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class UserSessionUpdateManyWithWhereWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUpdateManyWithWhereWithoutUserInput({
    required this.where,
    required this.data,
  });

  final UserSessionScalarWhereInput where;

  final UserSessionUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class UserSessionScalarWhereInput implements _i1.JsonSerializable {
  const UserSessionScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<UserSessionScalarWhereInput> AND;

  final _i1.PrismaNullable<List<UserSessionScalarWhereInput>> OR;

  final _i1.PrismaNullable<UserSessionScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<IntFilter> userId;

  final _i1.PrismaNullable<StringFilter> accessToken;

  final _i1.PrismaNullable<StringFilter> refreshToken;

  final _i1.PrismaNullable<DateTimeFilter> expiresAt;

  final _i1.PrismaNullable<DateTimeFilter> createdAt;

  final _i1.PrismaNullable<DateTimeFilter> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'userId': userId,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserCreateWithoutSessionsInput implements _i1.JsonSerializable {
  const UserCreateWithoutSessionsInput({
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserUncheckedCreateWithoutSessionsInput implements _i1.JsonSerializable {
  const UserUncheckedCreateWithoutSessionsInput({
    this.id,
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserCreateOrConnectWithoutSessionsInput implements _i1.JsonSerializable {
  const UserCreateOrConnectWithoutSessionsInput({
    required this.where,
    required this.create,
  });

  final UserWhereUniqueInput where;

  final UserCreateWithoutSessionsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class UserUpsertWithoutSessionsInput implements _i1.JsonSerializable {
  const UserUpsertWithoutSessionsInput({
    required this.update,
    required this.create,
  });

  final UserUpdateWithoutSessionsInput update;

  final UserCreateWithoutSessionsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class UserUpdateWithoutSessionsInput implements _i1.JsonSerializable {
  const UserUpdateWithoutSessionsInput({
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserUncheckedUpdateWithoutSessionsInput implements _i1.JsonSerializable {
  const UserUncheckedUpdateWithoutSessionsInput({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> passwordHash;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'passwordHash': passwordHash,
      'firstName': firstName,
      'lastName': lastName,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUpdateWithoutUserInput implements _i1.JsonSerializable {
  const UserSessionUpdateWithoutUserInput({
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUncheckedUpdateWithoutUserInput
    implements _i1.JsonSerializable {
  const UserSessionUncheckedUpdateWithoutUserInput({
    this.id,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class UserSessionUncheckedUpdateManyWithoutSessionsInput
    implements _i1.JsonSerializable {
  const UserSessionUncheckedUpdateManyWithoutSessionsInput({
    this.id,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> accessToken;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> refreshToken;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> expiresAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i1.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'accessToken': accessToken,
      'refreshToken': refreshToken,
      'expiresAt': expiresAt,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateUser implements _i1.JsonSerializable {
  const AggregateUser({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUser.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserGroupByOutputType implements _i1.JsonSerializable {
  const UserGroupByOutputType({
    required this.id,
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    required this.createdAt,
    required this.updatedAt,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserGroupByOutputTypeFromJson(json);

  final int id;

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final DateTime createdAt;

  final DateTime updatedAt;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateUserSession implements _i1.JsonSerializable {
  const AggregateUserSession({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUserSession.fromJson(Map<String, dynamic> json) =>
      _$AggregateUserSessionFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserSessionCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserSessionAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSessionSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserSessionMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserSessionMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateUserSessionToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionGroupByOutputType implements _i1.JsonSerializable {
  const UserSessionGroupByOutputType({
    required this.id,
    required this.userId,
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    required this.createdAt,
    required this.updatedAt,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UserSessionGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSessionGroupByOutputTypeFromJson(json);

  final int id;

  final int userId;

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final DateTime createdAt;

  final DateTime updatedAt;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UserSessionCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UserSessionAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UserSessionSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UserSessionMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UserSessionMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$UserSessionGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserCountOutputType implements _i1.JsonSerializable {
  const UserCountOutputType({required this.sessions});

  factory UserCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountOutputTypeFromJson(json);

  final int sessions;

  @override
  Map<String, dynamic> toJson() => _$UserCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserCountAggregateOutputType implements _i1.JsonSerializable {
  const UserCountAggregateOutputType({
    required this.id,
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    required this.createdAt,
    required this.updatedAt,
    required this.$all,
  });

  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserCountAggregateOutputTypeFromJson(json);

  final int id;

  final int email;

  final int passwordHash;

  final int firstName;

  final int lastName;

  final int createdAt;

  final int updatedAt;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserAvgAggregateOutputType implements _i1.JsonSerializable {
  const UserAvgAggregateOutputType({this.id});

  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSumAggregateOutputType implements _i1.JsonSerializable {
  const UserSumAggregateOutputType({this.id});

  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMinAggregateOutputType implements _i1.JsonSerializable {
  const UserMinAggregateOutputType({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<String> passwordHash;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserMaxAggregateOutputType implements _i1.JsonSerializable {
  const UserMaxAggregateOutputType({
    this.id,
    this.email,
    this.passwordHash,
    this.firstName,
    this.lastName,
    this.createdAt,
    this.updatedAt,
  });

  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UserMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<String> passwordHash;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionCountAggregateOutputType implements _i1.JsonSerializable {
  const UserSessionCountAggregateOutputType({
    required this.id,
    required this.userId,
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    required this.createdAt,
    required this.updatedAt,
    required this.$all,
  });

  factory UserSessionCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$UserSessionCountAggregateOutputTypeFromJson(json);

  final int id;

  final int userId;

  final int accessToken;

  final int refreshToken;

  final int expiresAt;

  final int createdAt;

  final int updatedAt;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$UserSessionCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionAvgAggregateOutputType implements _i1.JsonSerializable {
  const UserSessionAvgAggregateOutputType({
    this.id,
    this.userId,
  });

  factory UserSessionAvgAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$UserSessionAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> userId;

  @override
  Map<String, dynamic> toJson() =>
      _$UserSessionAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionSumAggregateOutputType implements _i1.JsonSerializable {
  const UserSessionSumAggregateOutputType({
    this.id,
    this.userId,
  });

  factory UserSessionSumAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$UserSessionSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> userId;

  @override
  Map<String, dynamic> toJson() =>
      _$UserSessionSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionMinAggregateOutputType implements _i1.JsonSerializable {
  const UserSessionMinAggregateOutputType({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  factory UserSessionMinAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$UserSessionMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> userId;

  final _i1.PrismaNullable<String> accessToken;

  final _i1.PrismaNullable<String> refreshToken;

  final _i1.PrismaNullable<DateTime> expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() =>
      _$UserSessionMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSessionMaxAggregateOutputType implements _i1.JsonSerializable {
  const UserSessionMaxAggregateOutputType({
    this.id,
    this.userId,
    this.accessToken,
    this.refreshToken,
    this.expiresAt,
    this.createdAt,
    this.updatedAt,
  });

  factory UserSessionMaxAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$UserSessionMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> userId;

  final _i1.PrismaNullable<String> accessToken;

  final _i1.PrismaNullable<String> refreshToken;

  final _i1.PrismaNullable<DateTime> expiresAt;

  final _i1.PrismaNullable<DateTime> createdAt;

  final _i1.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() =>
      _$UserSessionMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class User implements _i1.JsonSerializable {
  const User({
    required this.id,
    required this.email,
    required this.passwordHash,
    required this.firstName,
    required this.lastName,
    required this.createdAt,
    required this.updatedAt,
  });

  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  final int id;

  final String email;

  final String passwordHash;

  final String firstName;

  final String lastName;

  final DateTime createdAt;

  final DateTime updatedAt;

  @override
  Map<String, dynamic> toJson() => _$UserToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UserSession implements _i1.JsonSerializable {
  const UserSession({
    required this.id,
    required this.userId,
    required this.accessToken,
    required this.refreshToken,
    required this.expiresAt,
    required this.createdAt,
    required this.updatedAt,
  });

  factory UserSession.fromJson(Map<String, dynamic> json) =>
      _$UserSessionFromJson(json);

  final int id;

  final int userId;

  final String accessToken;

  final String refreshToken;

  final DateTime expiresAt;

  final DateTime createdAt;

  final DateTime updatedAt;

  @override
  Map<String, dynamic> toJson() => _$UserSessionToJson(this);
}

class UserDelegate {
  const UserDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<User>> findUnique(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueUser'] == null
        ? null
        : User.fromJson((result.data['findUniqueUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> findFirst({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstUser'] == null
        ? null
        : User.fromJson((result.data['findFirstUser'] as Map).cast());
  }

  Future<List<User>> findMany({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyUser'] as List)
        .whereType<Map>()
        .map((Map e) => User.fromJson(e.cast()))
        .toList();
  }

  Future<User> create({required UserCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['createOneUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> update({
    required UserUpdateInput data,
    required UserWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneUser'] == null
        ? null
        : User.fromJson((result.data['updateOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UserUpdateManyMutationInput data,
    _i1.PrismaNullable<UserWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyUser'] as Map).cast());
  }

  Future<User> upsert({
    required UserWhereUniqueInput where,
    required UserCreateInput create,
    required UserUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return User.fromJson((result.data['upsertOneUser'] as Map).cast());
  }

  Future<_i1.PrismaNullable<User>> delete(
      {required UserWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneUser'] == null
        ? null
        : User.fromJson((result.data['deleteOneUser'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<UserWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyUser'] as Map).cast());
  }

  Future<AggregateUser> aggregate({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateUser.fromJson((result.data['aggregateUser'] as Map).cast());
  }

  Future<List<UserGroupByOutputType>> groupBy({
    _i1.PrismaNullable<UserWhereInput> where,
    _i1.PrismaNullable<List<UserOrderByWithAggregationInput>> orderBy,
    required List<UserScalarFieldEnum> by,
    _i1.PrismaNullable<UserScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByUser',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserScalarFieldEnum.values
              .map((UserScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByUser'] as List)
        .whereType<Map>()
        .map((Map e) => UserGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class UserSessionDelegate {
  const UserSessionDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<UserSession>> findUnique(
      {required UserSessionWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueUserSession'] == null
        ? null
        : UserSession.fromJson(
            (result.data['findUniqueUserSession'] as Map).cast());
  }

  Future<_i1.PrismaNullable<UserSession>> findFirst({
    _i1.PrismaNullable<UserSessionWhereInput> where,
    _i1.PrismaNullable<List<UserSessionOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserSessionWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserSessionScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstUserSession'] == null
        ? null
        : UserSession.fromJson(
            (result.data['findFirstUserSession'] as Map).cast());
  }

  Future<List<UserSession>> findMany({
    _i1.PrismaNullable<UserSessionWhereInput> where,
    _i1.PrismaNullable<List<UserSessionOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserSessionWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UserSessionScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyUserSession'] as List)
        .whereType<Map>()
        .map((Map e) => UserSession.fromJson(e.cast()))
        .toList();
  }

  Future<UserSession> create({required UserSessionCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return UserSession.fromJson(
        (result.data['createOneUserSession'] as Map).cast());
  }

  Future<_i1.PrismaNullable<UserSession>> update({
    required UserSessionUpdateInput data,
    required UserSessionWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneUserSession'] == null
        ? null
        : UserSession.fromJson(
            (result.data['updateOneUserSession'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UserSessionUpdateManyMutationInput data,
    _i1.PrismaNullable<UserSessionWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyUserSession'] as Map).cast());
  }

  Future<UserSession> upsert({
    required UserSessionWhereUniqueInput where,
    required UserSessionCreateInput create,
    required UserSessionUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return UserSession.fromJson(
        (result.data['upsertOneUserSession'] as Map).cast());
  }

  Future<_i1.PrismaNullable<UserSession>> delete(
      {required UserSessionWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneUserSession'] == null
        ? null
        : UserSession.fromJson(
            (result.data['deleteOneUserSession'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<UserSessionWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyUserSession'] as Map).cast());
  }

  Future<AggregateUserSession> aggregate({
    _i1.PrismaNullable<UserSessionWhereInput> where,
    _i1.PrismaNullable<List<UserSessionOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UserSessionWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateUserSession.fromJson(
        (result.data['aggregateUserSession'] as Map).cast());
  }

  Future<List<UserSessionGroupByOutputType>> groupBy({
    _i1.PrismaNullable<UserSessionWhereInput> where,
    _i1.PrismaNullable<List<UserSessionOrderByWithAggregationInput>> orderBy,
    required List<UserSessionScalarFieldEnum> by,
    _i1.PrismaNullable<UserSessionScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByUserSession',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UserSessionScalarFieldEnum.values
              .map((UserSessionScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByUserSession'] as List)
        .whereType<Map>()
        .map((Map e) => UserSessionGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final _i3.Document dmmf = _i3.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'User',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'email',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'passwordHash',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'passwordHash',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'firstName',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'firstName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'lastName',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'lastName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'createdAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'DateTime',
            'default': {
              'name': 'now',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'updatedAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'DateTime',
            'isGenerated': false,
            'isUpdatedAt': true,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
          },
          {
            'name': 'sessions',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'UserSession',
            'relationName': 'UserToUserSession',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'sessions',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'UserSession',
              'relationName': 'UserToUserSession',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'User',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'passwordHash',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'firstName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'lastName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
            {
              'name': 'sessions',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'UserSession',
              'relationName': 'UserToUserSession',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'UserSession',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'userId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'userId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'accessToken',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'accessToken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'refreshToken',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'refreshToken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'expiresAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'DateTime',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'expiresAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'createdAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'DateTime',
            'default': {
              'name': 'now',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'updatedAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'DateTime',
            'isGenerated': false,
            'isUpdatedAt': true,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
          },
          {
            'name': 'user',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'User',
            'relationName': 'UserToUserSession',
            'relationFromFields': ['userId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'User',
              'relationName': 'UserToUserSession',
              'relationFromFields': ['userId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'UserSession',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'userId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'accessToken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'refreshToken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'expiresAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': true,
            },
            {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'User',
              'relationName': 'UserToUserSession',
              'relationFromFields': ['userId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
    ],
    'enums': [],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'UserWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'UserSessionUncheckedCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'sessions',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'UserSessionUncheckedUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateNestedOneWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateOneRequiredWithoutSessionsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateNestedOneWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateOrConnectWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateOneRequiredWithoutSessionsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateOrConnectWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpsertWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedUpdateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCreateOrConnectWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpsertWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateManyWithWhereWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserSessionUncheckedUpdateManyWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UserSessionScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedCreateWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCreateOrConnectWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpsertWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserUpdateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedUpdateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UserCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UserUncheckedCreateWithoutSessionsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUpdateWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserUncheckedUpdateWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'passwordHash',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionUncheckedUpdateManyWithoutSessionsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'accessToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'refreshToken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'expiresAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'User',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'passwordHash',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'sessions',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'UserCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSession',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'accessToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'refreshToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'expiresAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateUser',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByUser',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UserGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstUserSession',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyUserSession',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateUserSession',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateUserSession',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByUserSession',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UserSessionGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UserSessionScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUserSession',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneUser',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'User',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyUser',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneUserSession',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneUserSession',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneUserSession',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneUserSession',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSession',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyUserSession',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UserSessionUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyUserSession',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UserSessionWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateUser',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'passwordHash',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateUserSession',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'accessToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'refreshToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'expiresAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UserSessionMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountOutputType',
          'fields': [
            {
              'name': 'sessions',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'passwordHash',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'passwordHash',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'passwordHash',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'accessToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'refreshToken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'expiresAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'accessToken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'refreshToken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'expiresAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UserSessionMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'accessToken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'refreshToken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'expiresAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': ['Serializable'],
        },
        {
          'name': 'UserScalarFieldEnum',
          'values': [
            'id',
            'email',
            'passwordHash',
            'firstName',
            'lastName',
            'createdAt',
            'updatedAt',
          ],
        },
        {
          'name': 'UserSessionScalarFieldEnum',
          'values': [
            'id',
            'userId',
            'accessToken',
            'refreshToken',
            'expiresAt',
            'createdAt',
            'updatedAt',
          ],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'User',
        'findUnique': 'findUniqueUser',
        'findFirst': 'findFirstUser',
        'findMany': 'findManyUser',
        'create': 'createOneUser',
        'createMany': null,
        'update': 'updateOneUser',
        'updateMany': 'updateManyUser',
        'upsert': 'upsertOneUser',
        'delete': 'deleteOneUser',
        'deleteMany': 'deleteManyUser',
        'aggregate': 'aggregateUser',
        'groupBy': 'groupByUser',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'UserSession',
        'findUnique': 'findUniqueUserSession',
        'findFirst': 'findFirstUserSession',
        'findMany': 'findManyUserSession',
        'create': 'createOneUserSession',
        'createMany': null,
        'update': 'updateOneUserSession',
        'updateMany': 'updateManyUserSession',
        'upsert': 'upsertOneUserSession',
        'delete': 'deleteOneUserSession',
        'deleteMany': 'deleteManyUserSession',
        'aggregate': 'aggregateUserSession',
        'groupBy': 'groupByUserSession',
        'findRaw': null,
        'aggregateRaw': null,
      },
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i4.utf8.decode(_i4.base64.decode(
    r'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtZGFydCIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImludGVyYWN0aXZlVHJhbnNhY3Rpb25zIl0KICBvdXRwdXQgICAgICAgICAgPSAiLi4vbGliL3ByaXNtYV9jbGllbnQuZGFydCIKfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAic3FsaXRlIgogIHVybCAgICAgID0gImZpbGU6Li9kZXYuZGIiCn0KCm1vZGVsIFVzZXIgewogIGlkICAgICAgICAgICAgSW50ICAgICAgICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIGVtYWlsICAgICAgICAgU3RyaW5nCiAgcGFzc3dvcmRIYXNoICBTdHJpbmcKICBmaXJzdE5hbWUgICAgIFN0cmluZwogIGxhc3ROYW1lICAgICAgU3RyaW5nCiAgY3JlYXRlZEF0ICAgICBEYXRlVGltZSAgICAgIEBkZWZhdWx0KG5vdygpKQogIHVwZGF0ZWRBdCAgICAgRGF0ZVRpbWUgICAgICBAdXBkYXRlZEF0CiAgc2Vzc2lvbnMgICAgICBVc2VyU2Vzc2lvbltdCn0KCm1vZGVsIFVzZXJTZXNzaW9uIHsKICBpZCAgICAgICAgICAgIEludCAgICAgICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICB1c2VySWQgICAgICAgIEludAogIGFjY2Vzc1Rva2VuICAgU3RyaW5nCiAgcmVmcmVzaFRva2VuICBTdHJpbmcKICBleHBpcmVzQXQgICAgIERhdGVUaW1lCiAgY3JlYXRlZEF0ICAgICBEYXRlVGltZSAgICAgIEBkZWZhdWx0KG5vdygpKQogIHVwZGF0ZWRBdCAgICAgRGF0ZVRpbWUgICAgICBAdXBkYXRlZEF0CiAgCiAgdXNlciAgICAgICAgICBVc2VyICAgICAgICAgIEByZWxhdGlvbihmaWVsZHM6IFt1c2VySWRdLCByZWZlcmVuY2VzOiBbaWRdKQp9Cgo='));
const String _executable =
    r'D:\dart_projects\zloz_mnie\.dart_tool\prisma\query-engine';

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

class PrismaClient {
  const PrismaClient._(
    this._engine, [
    this._headers,
  ]);

  factory PrismaClient({_i1.PrismaNullable<Datasources> datasources}) {
    final _i1.Engine engine = _i1.BinaryEngine(
      datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
      dmmf: dmmf,
      schema: schema,
      environment: _i5.environment.all,
      logEmitter: _i1.PrismaLogEmitter(const <_i1.PrismaLogDefinition>[]),
      executable: _executable,
    );
    final PrismaClient client = PrismaClient._(
      engine,
      null,
    );
    return client;
  }

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  UserDelegate get user => UserDelegate._(
        _engine,
        _headers,
      );
  UserSessionDelegate get userSession => UserSessionDelegate._(
        _engine,
        _headers,
      );

  /// Connect to the database.
  Future<void> $connect() => _engine.start();

  /// Disconnect from the database.
  Future<void> $disconnect() async {
    await _engine.stop();
  }

  /// Interactive transactions.
  ///
  /// Sometimes you need more control over what queries execute within a transaction. Interactive transactions are meant to provide you with an escape hatch.
  ///
  /// **NOTE**: If you use interactive transactions, then you cannot use the [Data Proxy](https://prisma.pub/guides/preview-features#data-proxy) at the same time.
  ///
  /// E.g:
  /// ```dart
  /// final prisma = PrismaClient();
  /// prisma.$transaction((transaction) async {
  ///   await transaction.user.create({ ... });
  ///   await transaction.post.create({ ... });
  /// });
  /// ```
  Future<T> $transaction<T>(
    Future<T> Function(PrismaClient) fn, [
    _i1.TransactionOptions? options,
  ]) async {
    if (_headers?.transactionId != null) return fn(this);
    final _i1.TransactionHeaders headers = _i1.TransactionHeaders();
    final _i1.TransactionInfo info = await _engine.startTransaction(
      headers: headers,
      options: options ?? _i1.TransactionOptions(),
    );
    try {
      final T result = await fn(PrismaClient._(
        _engine,
        _i1.QueryEngineRequestHeaders(transactionId: info.id),
      ));
      await _engine.commitTransaction(
        headers: headers,
        info: info,
      );
      return result;
    } catch (e) {
      await _engine.rollbackTransaction(
        headers: headers,
        info: info,
      );
      rethrow;
    }
  }
}
